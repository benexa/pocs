1. Spring Configuration
----------------------------------
1a. Add Spring dependencies to the pom file.
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		
1b. Update the web.xml , add the Dispatcher servlet configuration.
    <servlet>
		<servlet-name>spring</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>spring</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>		
	
2. Spring development 
----------------------------------------
2a. Sample controller classes are present in com.test.cont package.
2b. Sample service classes are present in com.test.service and com.test.service.impl

3. Validate Spring is working correctly
--------------------------------------------
3a. URL http://localhost:8080/Spring_RestWS_Jersey_2.22/suser/sample should display a sample user "1 oone UserDaoThirdImpl"

REST SERVICE INTEGRATION
---------------------------------
4. Add Jersey Rest service dependencies to the POM
	<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-core</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-servlet</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey.version}</version>
		</dependency>

5. Add jersey spring service dependencies to the POM, and exclude the spring apis which are contained in 
   jersey spring as dependencies, since spring apis are already added in step 1a.
   
   <dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-spring</artifactId>
			<version>${jersey.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-beans</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-context</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-web</artifactId>
				</exclusion>
				<exclusion>
					<artifactId>spring-asm</artifactId>
					<groupId>org.springframework</groupId>
				</exclusion>
				<exclusion>
					<artifactId>spring-aop</artifactId>
					<groupId>org.springframework</groupId>
				</exclusion>
			</exclusions>
		</dependency>

6. Update the web.xml file, define a new jersey spring servlet and its mapping
   declare the service packages as well, as displayed below
	<servlet>
		<servlet-name>jersey</servlet-name>
		<servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class>
		<init-param>
			<param-name>com.sun.jersey.config.property.packages</param-name>
			<param-value>com.test.service</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>jersey</servlet-name>
		<url-pattern>/rest/*</url-pattern>
	</servlet-mapping>
		
7. Configure Listener ContextLoaderListener in web.xml
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

8. Configure the spring context file as context param, so that it is available to the SpringServlet
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring-servlet.xml</param-value>
	</context-param>
		
9. 	Declare Service class as @Component and use jersey annotations to mark the service and paths
    sample class "com.test.service.UserServiceImpl" is available
    